[{"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\index.tsx":"1","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\reportWebVitals.ts":"2","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\list.tsx":"3","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\form.tsx":"4","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\show.tsx":"5","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\components\\table.tsx":"6","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\peripherals\\list.tsx":"7","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\peripheral.ts":"8","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\gateway.ts":"9"},{"size":533,"mtime":1610473980181,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1610223034830,"results":"12","hashOfConfig":"13"},{"size":1049,"mtime":1610475350792,"results":"14","hashOfConfig":"11"},{"size":1085,"mtime":1610475003994,"results":"15","hashOfConfig":"11"},{"size":716,"mtime":1610474011068,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1610302335423,"results":"17","hashOfConfig":"11"},{"size":854,"mtime":1610468948741,"results":"18","hashOfConfig":"11"},{"size":209,"mtime":1610468948785,"results":"19","hashOfConfig":"11"},{"size":157,"mtime":1610473972961,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vxlhc8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o8vv8t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\index.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\reportWebVitals.ts",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\list.tsx",["40"],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\form.tsx",["41"],"import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport Gateway from \"../../models/gateway\";\n\nexport interface Props {\n  gateway: Gateway;\n}\n\nfunction GatewayForm(props: Props) {\n  const initialValues = {\n    id: props.gateway.id,\n    serial: \"\",\n    name: \"\",\n    address: \"\",\n  };\n\n  const handlerSubmit = (gateway: Gateway) => {\n    setTimeout(() => {\n      alert(JSON.stringify(gateway, null, 2));\n    }, 500);\n  };\n\n  return (\n    <React.Fragment>\n      <Formik initialValues={props.gateway} onSubmit={handlerSubmit}>\n        <Form>\n          <label htmlFor=\"input-serial\">Serial Number</label>\n          <Field id=\"input-serial\" name=\"serial\" />\n\n          <label htmlFor=\"input-name\">Last Name</label>\n          <Field id=\"input-name\" name=\"name\" />\n\n          <label htmlFor=\"input-address\">IPv4 Address</label>\n          <Field id=\"input-address\" name=\"address\" />\n\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\">Cancel</button>\n        </Form>\n      </Formik>\n    </React.Fragment>\n  );\n}\n\nexport default GatewayForm;\n","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\show.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\components\\table.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\peripherals\\list.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\peripheral.ts",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\gateway.ts",[],{"ruleId":"42","severity":1,"message":"43","line":7,"column":20,"nodeType":"44","messageId":"45","endLine":7,"endColumn":31},{"ruleId":"42","severity":1,"message":"46","line":10,"column":9,"nodeType":"44","messageId":"45","endLine":10,"endColumn":22},"@typescript-eslint/no-unused-vars","'setGateways' is assigned a value but never used.","Identifier","unusedVar","'initialValues' is assigned a value but never used."]