[{"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\index.tsx":"1","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\reportWebVitals.ts":"2","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\list.tsx":"3","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\form.tsx":"4","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\show.tsx":"5","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\components\\table.tsx":"6","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\peripherals\\list.tsx":"7","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\peripheral.ts":"8","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\gateway.ts":"9"},{"size":386,"mtime":1610477487946,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1610223034830,"results":"12","hashOfConfig":"13"},{"size":985,"mtime":1610484748532,"results":"14","hashOfConfig":"11"},{"size":1111,"mtime":1610477208515,"results":"15","hashOfConfig":"11"},{"size":716,"mtime":1610474011068,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1610302335423,"results":"17","hashOfConfig":"11"},{"size":854,"mtime":1610468948741,"results":"18","hashOfConfig":"11"},{"size":209,"mtime":1610468948785,"results":"19","hashOfConfig":"11"},{"size":157,"mtime":1610473972961,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vxlhc8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o8vv8t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\index.tsx",["40"],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\reportWebVitals.ts",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\list.tsx",["41"],"import React, { useState } from \"react\";\n\nimport Table from \"../../components/table\";\nimport Gateway from \"../../models/gateway\";\n\nfunction ListGateways() {\n  const [gateways, setGateways] = useState([\n    new Gateway(1, \"1234oi78\", \"gate1\", \"127.0.0.1\"),\n    new Gateway(2, \"1234oi72\", \"gate2\", \"127.1.0.1\"),\n  ]);\n\n  return (\n    <React.Fragment>\n      <h4>Gateways</h4>\n      <button id=\"button-new-gateway\">Add gateway</button>\n      <Table\n        headers={[\"Id\", \"Serial number\", \"Name\", \"Ipv4 Address\", \"Operations\"]}\n      >\n        {gateways.map((gate, k) => (\n          <tr key={k}>\n            <td>{gate.id}</td>\n            <td>{gate.serial}</td>\n            <td>{gate.name}</td>\n            <td>{gate.address}</td>\n            <td>\n              <button className=\"button-view\">view</button>\n              <button className=\"button-edit\">edit</button>\n            </td>\n          </tr>\n        ))}\n      </Table>\n    </React.Fragment>\n  );\n}\n\nexport default ListGateways;\n","D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\form.tsx",["42"],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\gateways\\show.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\components\\table.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\containers\\peripherals\\list.tsx",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\peripheral.ts",[],"D:\\Documents\\Projects\\gateway\\gateway-client\\src\\models\\gateway.ts",[],{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":19},{"ruleId":"43","severity":1,"message":"47","line":7,"column":20,"nodeType":"45","messageId":"46","endLine":7,"endColumn":31},{"ruleId":"43","severity":1,"message":"48","line":11,"column":9,"nodeType":"45","messageId":"46","endLine":11,"endColumn":22},"@typescript-eslint/no-unused-vars","'GatewayForm' is defined but never used.","Identifier","unusedVar","'setGateways' is assigned a value but never used.","'initialValues' is assigned a value but never used."]